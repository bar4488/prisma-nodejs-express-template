generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Token {
  client String
  token  String @id
  userId Int
  user   User   @relation(fields: [userId], references: [id])
}

model Admin {
  id        Int      @default(autoincrement()) @id
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model User {
  id           Int           @default(autoincrement()) @id
  firstName    String
  lastName     String
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  token        Token[]
  business     Business      @relation(fields: [businessId], references: [id])
  businessId   Int
  // is the user an admin or a normal user
  userType     String
  workTime     WorkTime[]
  appointments Appointment[]
}

model Business {
  id               Int               @default(autoincrement()) @id
  name             String
  createdAt        DateTime          @default(now())
  employees        User[]
  appointmentTypes AppointmentType[]
  appointments     Appointment[]
}

model AppointmentType {
  id           Int           @default(autoincrement()) @id
  type         String
  price        Int
  durationMin  Int
  business     Business      @relation(fields: [businessId], references: [id])
  appointments Appointment[]

  businessId Int
}

model Appointment {
  id          Int             @default(autoincrement()) @id
  clientPhone String
  user        User            @relation(fields: [userId], references: [id])
  type        AppointmentType @relation(fields: [typeId], references: [id])
  date        DateTime

  userId     Int
  typeId     Int
  business   Business? @relation(fields: [businessId], references: [id])
  businessId Int?
}

model WorkTime {
  id         Int      @default(autoincrement()) @id
  user       User     @relation(fields: [userId], references: [id])
  startsAt   DateTime
  finishesAt DateTime

  userId Int
}
